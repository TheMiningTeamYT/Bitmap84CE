	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_stringToUpper
_stringToUpper:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 9
	ld	sp, hl
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	pop	de
	inc	hl
	ld	de, 1
	push	de
	push	hl
	call	_calloc
	ld	iy, (ix + 6)
	push	hl
	pop	bc
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	e, (iy)
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	a, e
	or	a, a
	jr	z, BB0_3
	ld	l, e
	inc	iy
	ld	(ix - 3), bc
	ld	(ix - 9), bc
BB0_2:
	ld	(ix - 6), iy
	push	hl
	call	_toupper
	ld	bc, (ix - 9)
	ld	iy, (ix - 6)
	pop	de
	ld	a, l
	ld	hl, (ix - 3)
	ld	(hl), a
	ex	de, hl
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	inc	de
	ld	(ix - 3), de
	inc	iy
	or	a, a
	jr	nz, BB0_2
BB0_3:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_handleUsbEvent
_handleUsbEvent:
	push	ix
	ld	ix, 0
	add	ix, sp
	push	hl
	ld	de, (ix + 6)
	ld	iy, 0
	dec	de
	ld	bc, 4
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nc, BB1_6
	ld	hl, (ix + 9)
	ld	(ix - 3), hl
	ld	bc, (ix + 12)
	ld	hl, 100
	ld	iy, JTI1_0
	add	iy, de
	add	iy, de
	add	iy, de
	ld	iy, (iy)
	jp	(iy)
BB1_2:
	push	bc
	pop	iy
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB1_4
	ld	de, 1795
	push	bc
	pop	hl
	add	hl, de
	ld	(hl), 0
BB1_4:
	ld	hl, 0
	ld	(ix - 3), hl
BB1_5:
	push	bc
	pop	hl
	ld	de, (ix - 3)
	ld	(hl), de
	ld	iy, 0
BB1_6:
	lea	hl, iy
BB1_7:
	ld	sp, ix
	pop	ix
	ret
BB1_8:
	ld	hl, (ix + 9)
	push	hl
	call	_usb_ResetDevice
	pop	de
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI1_0
JTI1_0:
	dl	BB1_2
	dl	BB1_8
	dl	BB1_7
	dl	BB1_5

	section	.text,"ax",@progbits
	public	_init_USB
_init_USB:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 14
	ld	sp, hl
	ld	iy, _global
	xor	a, a
	ld	(_global), a
	lea	de, iy
	inc	de
	ld	bc, 1796
	lea	hl, iy
	ldir
	ld	hl, 36106
	push	hl
	ld	hl, 0
	push	hl
	push	iy
	ld	hl, _handleUsbEvent
	push	hl
	call	_usb_Init
	push	hl
	pop	de
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
BB2_1:
	ld	hl, (_global)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_5
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB2_11
	call	_os_GetCSC
	or	a, a
	jp	nz, BB2_11
	call	_usb_WaitForInterrupt
	push	hl
	pop	de
	jr	BB2_1
BB2_5:
	ld	de, _global+3
	push	hl
	push	de
	call	_msd_Open
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB2_11
	ld	a, 1
	ld	(_global+1795), a
	pea	ix - 8
	ld	hl, _global+3
	push	hl
	call	_msd_Info
	ld	iy, 6
	add	iy, sp
	ld	sp, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_11
	ld	de, _partitions
	ld	hl, 32
	push	hl
	ld	(ix - 11), de
	push	de
	ld	hl, _global+3
	push	hl
	call	_msd_FindPartitions
	ld	e, a
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	or	a, a
	jr	z, BB2_11
	ld	bc, _msd_Write
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	(ix - 14), hl
BB2_9:
	ld	iy, (ix - 11)
	ld	hl, (iy)
	ld	(ix - 11), iy
	ld	e, (iy + 3)
	push	de
	push	hl
	ld	hl, _global+3
	push	hl
	push	bc
	ld	hl, _msd_Read
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_Open
	ld	iy, 18
	add	iy, sp
	ld	sp, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_12
	ld	iy, (ix - 11)
	lea	iy, iy + 8
	ld	(ix - 11), iy
	ld	hl, (ix - 14)
	dec	hl
	ld	(ix - 14), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, _msd_Write
	jr	nz, BB2_9
BB2_11:
	call	_usb_Cleanup
	xor	a, a
	ld	sp, ix
	pop	ix
	ret
BB2_12:
	ld	a, 1
	ld	(_global+1796), a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_openFile
_openFile:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -284
	add	hl, sp
	ld	sp, hl
	ld	bc, -266
	lea	hl, ix
	add	hl, bc
	ld	bc, -281
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	pop	de
	inc	hl
	ld	de, 1
	push	de
	push	hl
	call	_calloc
	ld	iy, (ix + 6)
	push	ix
	ld	bc, -272
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	e, (iy)
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	a, e
	or	a, a
	jr	z, BB3_3
	ld	l, e
	inc	iy
	push	ix
	ld	bc, -272
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	ix
	ld	bc, -269
	add	ix, bc
	ld	(ix), de
	pop	ix
BB3_2:
	push	ix
	ld	bc, -275
	add	ix, bc
	ld	(ix), iy
	pop	ix
	push	hl
	call	_toupper
	ld	bc, -275
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	pop	de
	ld	a, l
	ld	bc, -269
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(hl), a
	ex	de, hl
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	inc	iy
	inc	de
	push	ix
	add	ix, bc
	ld	(ix), de
	pop	ix
	or	a, a
	jr	nz, BB3_2
BB3_3:
	ld	bc, -281
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 4
	ld	bc, -269
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (ix + 9)
	push	hl
	call	_strlen
	pop	de
	inc	hl
	ld	de, 1
	push	de
	push	hl
	call	_calloc
	ld	iy, (ix + 9)
	push	ix
	ld	bc, -275
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	e, (iy)
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	a, e
	or	a, a
	jr	z, BB3_6
	ld	l, e
	inc	iy
	push	ix
	ld	bc, -275
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	ix
	ld	bc, -278
	add	ix, bc
	ld	(ix), de
	pop	ix
BB3_5:
	push	ix
	ld	bc, -284
	add	ix, bc
	ld	(ix), iy
	pop	ix
	push	hl
	call	_toupper
	ld	bc, -284
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	pop	de
	ld	a, l
	ld	bc, -278
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(hl), a
	ex	de, hl
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	inc	iy
	inc	de
	push	ix
	add	ix, bc
	ld	(ix), de
	pop	ix
	or	a, a
	jr	nz, BB3_5
BB3_6:
	call	_usb_WaitForEvents
	ld	hl, 64
	push	hl
	ld	hl, 1
	push	hl
	call	_calloc
	ld	bc, -278
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	hl, 256
	push	hl
	ld	bc, -272
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -269
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 7), 0
	ld	bc, -269
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	bc, -269
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pop	iy
	add	iy, de
	ld	a, (iy - 1)
	cp	a, 47
	jr	z, BB3_8
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	bc, -269
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, de
	ld.sis	de, 47
	ld	(hl), e
	inc	hl
	ld	(hl), d
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
BB3_8:
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	ld	bc, -275
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -269
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 7), 0
	ld	bc, -272
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_free
	pop	hl
	ld	bc, -275
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_free
	pop	hl
	bit	0, (ix + 12)
	jr	z, BB3_10
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -275
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -272
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_Create
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB3_14
BB3_10:
	ld	bc, -278
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -269
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_OpenFile
	ld	iy, 12
	add	iy, sp
	ld	sp, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB3_14
	ld	bc, -281
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy
	ld	bc, -269
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	call	_time
	pop	hl
	ld	bc, -269
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_localtime
	pop	de
	ld	de, -278
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	ld	iy, (iy + 40)
	push	ix
	ld	de, -269
	add	ix, de
	ld	(ix), iy
	pop	ix
	ld	(iy + 11), 32
	ld	(iy + 13), 0
	push	hl
	pop	iy
	ld	hl, (iy)
	ld	c, 1
	call	__ishru
	push	ix
	ld	de, -272
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	hl, (iy + 3)
	lea	de, iy
	ld	a, 5
	ld	c, a
	call	__ishl
	ld	(ix - 3), de
	push	ix
	ld	de, -272
	add	ix, de
	ld	bc, (ix)
	pop	ix
	add	hl, bc
	push	ix
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	hl, (iy + 6)
	ld	c, 11
	call	__ishl
	push	hl
	pop	bc
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	push	ix
	ld	bc, -269
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	push	ix
	ld	bc, -281
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	(iy + 22), l
	ld	(iy + 23), h
	ld	de, (ix - 3)
	push	de
	pop	iy
	ld	hl, (iy + 9)
	push	ix
	ld	bc, -272
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (iy + 12)
	ld	c, a
	call	__ishl
	ld	(ix - 3), de
	push	ix
	ld	de, -275
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	hl, (iy + 15)
	ld	c, 9
	call	__ishl
	push	hl
	pop	bc
	ld	de, (ix - 3)
	ld	de, 24608
	ld	(ix - 3), bc
	ld	bc, -272
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	ix
	ld	bc, -275
	add	ix, bc
	ld	de, (ix)
	pop	ix
	add	hl, de
	ld	bc, (ix - 3)
	add	hl, bc
	push	ix
	ld	bc, -269
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	ld	(iy + 24), l
	ld	(iy + 25), h
	ld	(iy + 18), l
	ld	(iy + 19), h
	bit	0, (ix + 12)
	jr	z, BB3_13
	push	ix
	ld	bc, -281
	add	ix, bc
	ld	de, (ix)
	pop	ix
	ld	(iy + 14), e
	ld	(iy + 15), d
	ld	(iy + 16), l
	ld	(iy + 17), h
BB3_13:
	ld	bc, -278
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	sp, ix
	pop	ix
	ret
BB3_14:
	ld	bc, -278
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_free
	pop	hl
	ld	hl, 0
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_closeFile
_closeFile:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, (ix + 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB4_2
	call	_usb_WaitForEvents
	ld	hl, (ix + 6)
	push	hl
	call	_fat_CloseFile
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	call	_free
	pop	hl
BB4_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_readFile
_readFile:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 6
	ld	sp, hl
	ld	hl, (ix + 6)
	xor	a, a
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB5_5
	push	hl
	call	_fat_GetFileSize
	pop	bc
	ld	bc, 511
	xor	a, a
	call	__ladd
	push	hl
	pop	bc
	ld	a, e
	ld	l, 9
	call	__lshru
	ld	(ix - 3), bc
	ld	(ix - 6), a
	ld	hl, (ix + 6)
	push	hl
	call	_fat_GetFileBlockOffset
	push	hl
	pop	bc
	pop	hl
	ld	d, 0
	ld	hl, (ix - 3)
	ld	e, (ix - 6)
	ld	a, d
	call	__lsub
	push	hl
	pop	bc
	ld	a, e
	push	bc
	pop	iy
	ld	(ix - 3), a
	ld	l, 9
	call	__lshl
	ld	hl, (ix + 9)
	ld	e, d
	call	__lcmpu
	jr	nc, BB5_3
	ld	c, 9
	ld	hl, (ix + 9)
	call	__ishru
	push	hl
	pop	iy
	xor	a, a
	ld	(ix - 3), a
BB5_3:
	ld	hl, (ix + 12)
	push	hl
	ld	(ix - 6), iy
	push	iy
	ld	hl, (ix + 6)
	push	hl
	call	_fat_ReadFile
	push	hl
	pop	bc
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	xor	a, a
	ld	hl, (ix - 6)
	ld	e, (ix - 3)
	call	__lcmpu
	jr	z, BB5_6
	ld	a, 0
BB5_5:
	ld	sp, ix
	pop	ix
	ret
BB5_6:
	ld	a, -1
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_writeFile
_writeFile:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 16
	ld	sp, hl
	ld	hl, (ix + 6)
	xor	a, a
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB6_6
	ld	bc, (ix + 9)
	ld	de, 0
	push	de
	push	bc
	push	hl
	call	_fat_SetFileSize
	xor	a, a
	ld	iy, 9
	add	iy, sp
	ld	sp, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB6_6
	ld	de, (ix + 12)
	ld	bc, 511
	lea	hl, ix - 4
	ld	(ix - 7), hl
	ld	hl, (ix + 9)
	add	hl, bc
	ld	c, 9
	call	__ishru
	ld	(ix - 10), hl
	push	de
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_fat_WriteFile
	ld	iy, 9
	add	iy, sp
	ld	sp, iy
	ld	de, (ix - 10)
	or	a, a
	sbc	hl, de
	jr	z, BB6_4
	ld	a, 0
	jr	BB6_5
BB6_4:
	ld	a, -1
BB6_5:
	ld	(ix - 10), a
	ld	hl, (ix - 7)
	push	hl
	call	_time
	pop	hl
	ld	hl, (ix - 7)
	push	hl
	call	_localtime
	pop	de
	ld	iy, (ix + 6)
	ld	iy, (iy + 40)
	ld	(ix - 7), iy
	ld	(iy + 11), 32
	push	hl
	pop	iy
	ld	hl, (iy)
	ld	c, 1
	call	__ishru
	ld	(ix - 13), hl
	ld	hl, (iy + 3)
	lea	de, iy
	ld	a, 5
	ld	c, a
	call	__ishl
	ld	bc, (ix - 13)
	add	hl, bc
	ld	(ix - 13), hl
	ld	hl, (iy + 6)
	ld	c, 11
	call	__ishl
	push	hl
	pop	bc
	ld	hl, (ix - 13)
	add	hl, bc
	ld	iy, (ix - 7)
	ld	(iy + 22), l
	ld	(iy + 23), h
	push	de
	pop	iy
	ld	hl, (iy + 9)
	ld	(ix - 13), hl
	ld	hl, (iy + 12)
	ld	c, a
	call	__ishl
	ld	(ix - 16), hl
	ld	hl, (iy + 15)
	ld	c, 9
	call	__ishl
	push	hl
	pop	bc
	ld	de, 24608
	ld	hl, (ix - 13)
	add	hl, de
	ld	de, (ix - 16)
	add	hl, de
	add	hl, bc
	ld	iy, (ix - 7)
	ld	(iy + 24), l
	ld	(iy + 25), h
	ld	(iy + 18), l
	ld	(iy + 19), h
	ld	a, (ix - 10)
BB6_6:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_createDirectory
_createDirectory:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 12
	ld	sp, hl
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	pop	de
	inc	hl
	ld	de, 1
	push	de
	push	hl
	call	_calloc
	ld	iy, (ix + 6)
	ld	(ix - 3), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	e, (iy)
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	a, e
	or	a, a
	jr	z, BB7_3
	ld	l, e
	inc	iy
	ld	de, (ix - 3)
	ld	(ix - 6), de
BB7_2:
	ld	(ix - 9), iy
	push	hl
	call	_toupper
	ld	iy, (ix - 9)
	pop	de
	ld	a, l
	ld	hl, (ix - 6)
	ld	(hl), a
	ex	de, hl
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	inc	iy
	inc	de
	ld	(ix - 6), de
	or	a, a
	jr	nz, BB7_2
BB7_3:
	ld	hl, (ix + 9)
	push	hl
	call	_strlen
	pop	de
	inc	hl
	ld	de, 1
	push	de
	push	hl
	call	_calloc
	ld	iy, (ix + 9)
	ld	(ix - 6), hl
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	e, (iy)
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	a, e
	or	a, a
	jr	z, BB7_6
	ld	l, e
	inc	iy
	ld	de, (ix - 6)
	ld	(ix - 9), de
BB7_5:
	ld	(ix - 12), iy
	push	hl
	call	_toupper
	ld	iy, (ix - 12)
	pop	de
	ld	a, l
	ld	hl, (ix - 9)
	ld	(hl), a
	ex	de, hl
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	inc	iy
	inc	de
	ld	(ix - 9), de
	or	a, a
	jr	nz, BB7_5
BB7_6:
	call	_usb_WaitForEvents
	ld	hl, 16
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_Create
	ld	(ix - 9), hl
	ld	hl, 12
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 3)
	push	hl
	call	_free
	pop	hl
	ld	hl, (ix - 6)
	push	hl
	call	_free
	ld	hl, (ix - 9)
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	e, -1
	ld	d, 0
	ld	a, e
	jr	nz, BB7_9
	ld	bc, 5
	or	a, a
	sbc	hl, bc
	jr	nz, BB7_10
BB7_8:
	or	a, e
	ld	sp, ix
	pop	ix
	ret
BB7_9:
	ld	a, d
	ld	bc, 5
	or	a, a
	sbc	hl, bc
	jr	z, BB7_8
BB7_10:
	ld	e, d
	or	a, e
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_getSizeOf
_getSizeOf:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, (ix + 6)
	ld	de, 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	ex	de, hl
	call	nz, _fat_GetFileSize
	pop	de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_deleteFile
_deleteFile:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -277
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	pop	de
	inc	hl
	ld	de, 1
	push	de
	push	hl
	call	_calloc
	ld	iy, (ix + 6)
	push	ix
	ld	bc, -268
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	e, (iy)
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	a, e
	or	a, a
	jr	z, BB9_3
	ld	l, e
	inc	iy
	push	ix
	ld	bc, -268
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	ix
	ld	bc, -265
	add	ix, bc
	ld	(ix), de
	pop	ix
BB9_2:
	push	ix
	ld	bc, -271
	add	ix, bc
	ld	(ix), iy
	pop	ix
	push	hl
	call	_toupper
	ld	bc, -271
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	pop	de
	ld	a, l
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(hl), a
	ex	de, hl
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	inc	iy
	inc	de
	push	ix
	add	ix, bc
	ld	(ix), de
	pop	ix
	or	a, a
	jr	nz, BB9_2
BB9_3:
	ld	bc, -262
	lea	hl, ix
	add	hl, bc
	ld	bc, -265
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (ix + 9)
	push	hl
	call	_strlen
	pop	de
	inc	hl
	ld	de, 1
	push	de
	push	hl
	call	_calloc
	ld	iy, (ix + 9)
	push	ix
	ld	bc, -271
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	e, (iy)
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	a, e
	or	a, a
	jr	z, BB9_6
	ld	l, e
	inc	iy
	push	ix
	ld	bc, -271
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	ix
	ld	bc, -274
	add	ix, bc
	ld	(ix), de
	pop	ix
BB9_5:
	push	ix
	ld	bc, -277
	add	ix, bc
	ld	(ix), iy
	pop	ix
	push	hl
	call	_toupper
	ld	bc, -277
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	pop	de
	ld	a, l
	ld	bc, -274
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(hl), a
	ex	de, hl
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	inc	iy
	inc	de
	push	ix
	add	ix, bc
	ld	(ix), de
	pop	ix
	or	a, a
	jr	nz, BB9_5
BB9_6:
	call	_usb_WaitForEvents
	ld	hl, 256
	push	hl
	ld	bc, -268
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	(ix - 7), 0
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	pop	iy
	add	iy, de
	ld	a, (iy - 1)
	cp	a, 47
	jr	z, BB9_8
	ld	bc, _.str.2.8
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	push	bc
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
BB9_8:
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	hl, 256
	or	a, a
	sbc	hl, de
	push	hl
	ld	bc, -271
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strncat
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, -265
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, _global+1027
	push	hl
	call	_fat_Delete
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	ld	bc, -268
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_free
	pop	hl
	ld	bc, -271
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_free
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_close_USB
_close_USB:
	call	_usb_WaitForEvents
	ld	a, (_global+1796)
	bit	0, a
	jr	nz, BB10_3
	ld	a, (_global+1795)
	bit	0, a
	jr	nz, BB10_4
BB10_2:
	jp	_usb_Cleanup
BB10_3:
	ld	hl, _global+1027
	push	hl
	call	_fat_Close
	pop	hl
	ld	a, (_global+1795)
	bit	0, a
	jr	z, BB10_2
BB10_4:
	ld	hl, _global+3
	push	hl
	call	_msd_Close
	pop	hl
	jp	_usb_Cleanup
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z16findBitMaskShiftm
__Z16findBitMaskShiftm:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 4
	ld	sp, hl
	ld	iy, (ix + 6)
	ld	e, (ix + 9)
	ld	d, -5
	lea	hl, iy
	call	__lcmpzero
	jr	z, BB11_2
BB11_1:
	lea	bc, iy
	ld	a, e
	ld	l, 1
	call	__lshru
	ld	(ix - 3), bc
	ld	(ix - 4), a
	inc	d
	lea	hl, iy
	ld	bc, 2
	xor	a, a
	call	__lcmpu
	ld	iy, (ix - 3)
	ld	e, (ix - 4)
	jr	nc, BB11_1
BB11_2:
	ld	a, d
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z13displayRGBRowPhijjPtPFtS_E
__Z13displayRGBRowPhijjPtPFtS_E:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 12
	ld	sp, hl
	ld	hl, (ix + 9)
	ld	bc, 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB12_7
	ld	hl, (ix + 6)
	ld	(ix - 6), hl
	ld	de, (ix + 12)
	ld	hl, (ix + 18)
	ld	(ix - 9), hl
	ex	de, hl
BB12_2:
	ld	(ix - 12), bc
	ld	(ix - 3), hl
	ld	bc, -8388608
	add	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	jr	c, BB12_4
BB12_3:
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix + 21)
	call	__indcallhl
	pop	de
	ld	de, (ix + 9)
	ld	bc, (ix - 9)
	push	bc
	pop	iy
	ld	(iy), l
	ld	(iy + 1), h
	lea	iy, iy + 2
	ld	(ix - 9), iy
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	(ix - 3), hl
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	nc, BB12_3
BB12_4:
	ld	bc, (ix - 12)
BB12_5:
	ld	de, (ix + 15)
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	hl, (ix - 3)
	ld	de, (ix + 12)
	add	hl, de
	inc	bc
	ld	(ix - 3), hl
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	c, BB12_5
	push	bc
	pop	hl
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 3)
	jr	c, BB12_2
BB12_7:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z18displayIndexed8RowPhijPtS0_
__Z18displayIndexed8RowPhijPtS0_:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 6
	ld	sp, hl
	ld	hl, (ix + 9)
	ld	de, 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB13_7
	ld	iy, (ix + 12)
	ld	hl, (ix + 18)
	ld	(ix - 3), hl
	ld	a, 1
BB13_2:
	lea	hl, iy
BB13_3:
	ld	bc, -8388608
	add	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	jr	c, BB13_5
	ld	(ix - 6), iy
	ld	iy, (ix + 6)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	c, a
	call	__ishl
	push	hl
	pop	bc
	ld	hl, (ix + 15)
	add	hl, bc
	ld	bc, (ix + 9)
	ld	hl, (hl)
	ld	iy, (ix - 3)
	ld	(iy), l
	ld	(iy + 1), h
	lea	iy, iy + 2
	ld	(ix - 3), iy
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
	jr	BB13_3
BB13_5:
	ld	bc, (ix + 12)
	add	iy, bc
	inc	de
	lea	hl, iy
	ld	bc, -8388608
	add	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	jr	c, BB13_5
	push	de
	pop	hl
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	jr	c, BB13_2
BB13_7:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z17displayIndexedRowPhijhPtS0_
__Z17displayIndexedRowPhijhPtS0_:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 20
	ld	sp, hl
	ld	hl, (ix + 9)
	ld	a, 8
	ld	iy, -1
	sub	a, (ix + 15)
	ld	(ix - 8), a
	ld	de, -8388608
	add	hl, de
	ld	bc, -8388607
	ld	(ix - 14), hl
	or	a, a
	sbc	hl, bc
	jp	c, BB14_11
	ld	hl, (ix + 6)
	ld	(ix - 6), hl
	ld	hl, (ix + 21)
	ld	(ix - 11), hl
	lea	hl, iy
	ld	c, (ix + 15)
	call	__ishl
	push	hl
	pop	bc
	scf
	sbc	hl, hl
	or	a, a
	sbc	hl, bc
	ld	bc, 255
	call	__iand
	ld	(ix - 20), hl
	ld	iy, 0
	lea	hl, iy
	ld	(ix - 3), iy
	ld	a, (ix - 8)
	ld	(ix - 7), a
BB14_2:
	ld	(ix - 17), iy
	ld	hl, (ix - 3)
	add	hl, de
	ld	bc, -8388607
	or	a, a
	sbc	hl, bc
	jr	c, BB14_5
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 6)
	ld	l, (iy)
	ld	c, (ix - 7)
	call	__ishru
	ld	bc, (ix - 20)
	call	__iand
	ld	c, 1
	call	__ishl
	push	hl
	pop	bc
	ld	hl, (ix + 18)
	add	hl, bc
	ex	de, hl
BB14_4:
	push	de
	pop	hl
	ld	hl, (hl)
	ld	iy, (ix - 11)
	ld	(iy), l
	ld	(iy + 1), h
	lea	iy, iy + 2
	ld	(ix - 11), iy
	ld	hl, (ix - 3)
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	ld	(ix - 3), hl
	ld	bc, -8388608
	add	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB14_4
	jr	BB14_6
BB14_5:
	ld	iy, 0
	ld	(ix - 3), iy
BB14_6:
	ld	iy, (ix - 17)
BB14_7:
	ld	e, (ix - 7)
	ld	a, e
	ld	c, (ix + 15)
	cp	a, c
	sbc	a, a
	ld	l, a
	ld	a, e
	sub	a, c
	bit	0, l
	ld	e, (ix - 8)
	jr	nz, BB14_9
	ld	e, a
BB14_9:
	ld	(ix - 7), e
	ld	a, l
	and	a, 1
	ld	bc, 0
	ld	c, a
	ld	hl, (ix - 6)
	add	hl, bc
	ld	(ix - 6), hl
	ld	de, (ix + 12)
	ld	hl, (ix - 3)
	add	hl, de
	inc	iy
	ld	(ix - 3), hl
	ld	bc, -8388608
	add	hl, bc
	ld	de, -8388607
	or	a, a
	sbc	hl, de
	jp	c, BB14_7
	lea	hl, iy
	add	hl, bc
	push	bc
	pop	de
	ld	bc, (ix - 14)
	or	a, a
	sbc	hl, bc
	jp	c, BB14_2
BB14_11:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15generatePalettejPhPt
__Z15generatePalettejPhPt:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 9
	ld	sp, hl
	ld	de, (ix + 6)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB15_3
	ld	bc, (ix + 9)
	ld	hl, (ix + 12)
	ld	(ix - 3), hl
BB15_2:
	ld	(ix - 9), bc
	ld	(ix - 6), de
	push	bc
	call	_rgb888to565
	ld	iy, (ix - 9)
	ld	c, l
	ld	b, h
	pop	de
	ld	de, (ix - 6)
	ld	hl, (ix - 3)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	lea	iy, iy + 4
	lea	bc, iy
	dec	de
	ld	iy, (ix - 3)
	lea	iy, iy + 2
	ld	(ix - 3), iy
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB15_2
BB15_3:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z18displayBitFieldRowPhijjPtP16bitmapInfoHeader
__Z18displayBitFieldRowPhijjPtP16bitmapInfoHeader:
	push	ix
	ld	ix, 0
	add	ix, sp
	lea	hl, ix - 48
	ld	sp, hl
	ld	iy, (ix + 21)
	ld	d, -5
	ld	hl, (iy + 40)
	ld	e, (iy + 43)
	ld	(ix - 12), hl
	ld	(ix - 13), e
	call	__lcmpzero
	ld	(ix - 4), d
	jr	z, BB16_3
	ld	d, -5
	ld	iy, (ix - 12)
	ld	e, (ix - 13)
BB16_2:
	lea	bc, iy
	ld	a, e
	ld	l, 1
	call	__lshru
	ld	(ix - 3), bc
	ld	(ix - 5), a
	inc	d
	lea	hl, iy
	ld	bc, 2
	xor	a, a
	call	__lcmpu
	ld	iy, (ix - 3)
	ld	e, (ix - 5)
	jr	nc, BB16_2
BB16_3:
	ld	(ix - 6), d
	ld	a, -6
	ld	(ix - 5), a
	ld	hl, (ix + 21)
	push	hl
	pop	iy
	ld	hl, (iy + 44)
	ld	e, (iy + 47)
	call	__lcmpzero
	ld	(ix - 19), hl
	ld	(ix - 20), e
	jr	z, BB16_6
	push	hl
	pop	iy
BB16_5:
	lea	bc, iy
	ld	a, e
	ld	l, 1
	call	__lshru
	ld	(ix - 3), bc
	ld	d, a
	ld	a, (ix - 5)
	inc	a
	ld	(ix - 5), a
	lea	hl, iy
	ld	bc, 2
	xor	a, a
	call	__lcmpu
	ld	iy, (ix - 3)
	ld	e, d
	jr	nc, BB16_5
BB16_6:
	ld	hl, (ix + 21)
	push	hl
	pop	iy
	ld	hl, (iy + 48)
	ld	e, (iy + 51)
	call	__lcmpzero
	ld	(ix - 23), hl
	ld	(ix - 24), e
	jr	z, BB16_9
	push	hl
	pop	iy
BB16_8:
	lea	bc, iy
	ld	a, e
	ld	l, 1
	call	__lshru
	ld	(ix - 3), bc
	ld	d, a
	ld	a, (ix - 4)
	inc	a
	ld	(ix - 4), a
	lea	hl, iy
	ld	bc, 2
	xor	a, a
	call	__lcmpu
	ld	iy, (ix - 3)
	ld	e, d
	jr	nc, BB16_8
BB16_9:
	ld	hl, (ix + 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB16_29
	push	af
	ld	a, (ix - 6)
	ld	iyl, a
	pop	af
	ld	a, iyl
	rlc	a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, iyl
	push	de
	pop	hl
	ld	bc, 11
	add	hl, bc
	push	hl
	pop	bc
	ld	hl, -11
	or	a, a
	sbc	hl, de
	ld	a, iyl
	add	a, -128
	cp	a, 117
	jr	c, BB16_12
	push	bc
	pop	hl
BB16_12:
	ld	(ix - 16), hl
	ld	a, (ix - 5)
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	push	de
	pop	iy
	ld	bc, 5
	add	iy, bc
	ld	hl, -5
	or	a, a
	sbc	hl, de
	add	a, -128
	cp	a, 123
	jr	c, BB16_14
	lea	hl, iy
BB16_14:
	ld	(ix - 27), hl
	ld	hl, (ix + 6)
	ld	(ix - 3), hl
	ld	hl, (ix + 18)
	ld	(ix - 9), hl
	ld	c, (ix - 4)
	ld	a, c
	rlc	a
	sbc	hl, hl
	ld	l, c
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	a, l
	ld	(ix - 34), a
	ld	hl, (ix - 27)
	ld	a, l
	ld	(ix - 35), a
	ld	hl, (ix - 16)
	ld	a, l
	ld	(ix - 36), a
	ld	iy, 0
	lea	bc, iy
BB16_15:
	lea	hl, iy
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	ld	(ix - 16), bc
	jp	c, BB16_22
	ld	(ix - 39), iy
	ld	c, (ix - 4)
	ld	a, c
	rlc	a
	sbc	hl, hl
	ld	l, c
	push	hl
	pop	iy
	push	hl
	pop	bc
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	de
	ld	iy, -1
	xor	a, a
	push	bc
	pop	hl
	lea	bc, iy
	call	__land
	ld	(ix - 33), hl
	ld	e, (ix - 5)
	ld	l, e
	rlc	l
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, e
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	de
	push	bc
	pop	hl
	ld	bc, -1
	call	__land
	ld	(ix - 45), hl
	ld	e, (ix - 6)
	ld	l, e
	rlc	l
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, e
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	de
	push	bc
	pop	hl
	ld	bc, -1
	call	__land
	ld	(ix - 42), hl
	ld	iy, (ix - 3)
	ld	hl, (iy)
	ld	d, (iy + 3)
	ld	(ix - 27), hl
	ld	e, d
	ld	bc, (ix - 23)
	ld	a, (ix - 24)
	call	__land
	push	hl
	pop	bc
	ld	(ix - 48), bc
	ld	a, e
	ld	l, (ix - 34)
	call	__lshl
	ld	(ix - 30), bc
	ld	bc, (ix - 48)
	ld	a, e
	ld	hl, (ix - 33)
	call	__lshru
	ld	a, (ix - 4)
	add	a, -128
	cp	a, -127
	jr	c, BB16_18
	ld	(ix - 30), bc
BB16_18:
	ld	(ix - 3), iy
	ld	hl, (ix - 27)
	ld	e, d
	ld	bc, (ix - 19)
	ld	a, (ix - 20)
	call	__land
	push	hl
	pop	iy
	lea	bc, iy
	ld	a, e
	ld	l, (ix - 35)
	call	__lshl
	ld	(ix - 33), bc
	lea	bc, iy
	ld	a, e
	ld	hl, (ix - 45)
	call	__lshru
	ld	l, c
	ld	h, b
	ld	c, 5
	call	__sshl
	ld	a, (ix - 5)
	add	a, -128
	cp	a, -127
	jp	c, BB16_20
	ld	(ix - 33), hl
BB16_20:
	ld	iy, (ix - 39)
	ld	hl, (ix - 27)
	ld	e, d
	ld	bc, (ix - 12)
	ld	a, (ix - 13)
	call	__land
	push	hl
	pop	bc
	ld	(ix - 27), bc
	ld	a, e
	ld	l, (ix - 36)
	call	__lshl
	ld	(ix - 39), bc
	ld	bc, (ix - 27)
	ld	a, e
	ld	hl, (ix - 42)
	call	__lshru
	ld	l, c
	ld	h, b
	ld	c, 11
	call	__sshl
	ld	a, (ix - 6)
	add	a, -128
	cp	a, -127
	jp	c, BB16_23
	jr	BB16_24
BB16_22:
	ld	iy, 0
	jr	BB16_26
BB16_23:
	ld	hl, (ix - 39)
BB16_24:
	ld	de, (ix - 30)
	add.sis	hl, de
	ld	de, (ix - 33)
	add.sis	hl, de
	push	hl
	pop	bc
BB16_25:
	lea	hl, iy
	ld	iy, (ix - 9)
	ld	(iy), c
	ld	(iy + 1), b
	lea	iy, iy + 2
	ld	(ix - 9), iy
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	push	hl
	pop	iy
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	jr	nc, BB16_25
BB16_26:
	ld	bc, (ix - 16)
	ld	hl, (ix - 3)
BB16_27:
	ld	de, (ix + 15)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, (ix + 12)
	add	iy, de
	inc	bc
	lea	hl, iy
	ld	de, -8388608
	add	hl, de
	inc	de
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 3)
	jr	c, BB16_27
	push	bc
	pop	hl
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	jp	c, BB16_15
BB16_29:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z13displayBitmapPKcS0_
__Z13displayBitmapPKcS0_:
	push	ix
	ld	ix, 0
	add	ix, sp
	ld	hl, -191
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	xor	a, a
	ld	(ix - 118), a
	ld	bc, 0
	push	bc
	push	de
	push	hl
	call	_openFile
	ld	iy, 9
	add	iy, sp
	ld	sp, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_13
	ld	de, 5120
	push	de
	ld	(ix - 117), hl
	call	__Znaj
	ld	(ix - 121), hl
	pop	hl
	ld	hl, (ix - 117)
	push	hl
	call	_fat_GetFileSize
	pop	bc
	ld	bc, 511
	xor	a, a
	call	__ladd
	push	hl
	pop	bc
	ld	a, e
	ld	l, 9
	call	__lshru
	ld	(ix - 124), bc
	ld	(ix - 127), a
	ld	hl, (ix - 117)
	push	hl
	call	_fat_GetFileBlockOffset
	push	hl
	pop	bc
	pop	hl
	xor	a, a
	ld	hl, (ix - 124)
	ld	e, (ix - 127)
	call	__lsub
	push	hl
	pop	iy
	ld	d, e
	lea	bc, iy
	ld	a, d
	ld	l, 9
	call	__lshl
	ld	hl, 5120
	ld	e, l
	call	__lcmpu
	ccf
	sbc	a, a
	inc	a
	bit	0, a
	ld	hl, 10
	push	hl
	pop	bc
	jr	nz, BB17_3
	lea	bc, iy
BB17_3:
	bit	0, a
	ld	a, 0
	jr	nz, BB17_5
	ld	a, d
BB17_5:
	ld	(ix - 124), a
	ld	hl, (ix - 121)
	push	hl
	push	bc
	ld	hl, (ix - 117)
	push	hl
	ld	(ix - 127), bc
	call	_fat_ReadFile
	push	hl
	pop	bc
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 127)
	ld	e, (ix - 124)
	xor	a, a
	call	__lcmpu
	jp	nz, BB17_9
	ld	hl, (ix - 121)
	ld	hl, (hl)
	ld.sis	de, 19778
	or	a, a
	sbc.sis	hl, de
	jr	nz, BB17_10
	ld	bc, 108
	lea	de, ix - 114
	ld	iy, (ix - 121)
	ld	hl, (iy + 10)
	ld	(ix - 127), hl
	lea	iy, iy + 14
	ld	(ix - 3), bc
	ld	bc, -130
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	lea	hl, iy
	ld	bc, (ix - 3)
	ldir
	ld	hl, (ix - 114)
	ld	e, (ix - 111)
	ld	(ix - 124), hl
	ld	bc, 40
	xor	a, a
	call	__lcmpu
	jr	nc, BB17_14
	ld	hl, _.str.2
	jr	BB17_11
BB17_9:
	ld	hl, _.str.1
	jr	BB17_11
BB17_10:
	ld	hl, _.str.1.2
BB17_11:
	push	hl
	call	_os_PutStrFull
BB17_12:
	pop	hl
	ld	hl, (ix - 121)
	push	hl
	call	__ZdaPv
	pop	hl
	call	_usb_WaitForEvents
	ld	hl, (ix - 117)
	push	hl
	call	_fat_CloseFile
	pop	hl
	ld	hl, (ix - 117)
	push	hl
	call	_free
	pop	hl
BB17_13:
	ld	a, (ix - 118)
	ld	sp, ix
	pop	ix
	ret
BB17_14:
	ld	bc, -139
	lea	hl, ix
	add	hl, bc
	ld	(hl), e
	ld	bc, 3
	ld	de, (ix - 124)
	add	iy, de
	ld	hl, (ix - 98)
	ld	e, (ix - 95)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -136
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	(ix), e
	pop	ix
	call	__lcmpzero
	ld	bc, (ix - 3)
	jp	nz, BB17_17
BB17_15:
	ld	bc, -145
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	de, (ix - 100)
	ld	(ix - 124), de
	ld	c, 3
	ld	l, e
	ld	h, d
	call	__sshru
	ld	(ix - 3), de
	ld	de, -148
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	iy, 0
	lea	bc, iy
	ld	de, (ix - 3)
	ld	c, e
	ld	b, d
	ld	hl, (ix - 110)
	ld	e, (ix - 107)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -139
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	ix
	ld	bc, -142
	add	ix, bc
	ld	(ix), e
	pop	ix
	push	ix
	ld	bc, -151
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	a, iyh
	ld	bc, (ix - 3)
	call	__lmulu
	ld	bc, 31
	xor	a, a
	call	__ladd
	inc	bc
	call	__ldivs
	ld	c, 2
	call	__ishl
	push	hl
	pop	iy
	ld	hl, (ix - 124)
	dec.sis	hl
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	bc, 32
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	c, BB17_20
BB17_16:
	ld	hl, _.str.5
	jp	BB17_11
BB17_17:
	ld	de, -136
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, (ix - 3)
	call	__lcmpu
	jp	nz, BB17_25
	ld	hl, 107
	ld	e, a
	ld	bc, (ix - 124)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -139
	add	ix, bc
	ld	a, (ix)
	pop	ix
	ld	bc, (ix - 3)
	call	__lcmpu
	jp	c, BB17_15
	ld	hl, _.str.4
	jp	BB17_11
BB17_20:
	ld	bc, 2
	ld	hl, JTI17_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB17_21:
	ld	bc, -136
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	e, (ix)
	pop	ix
	call	__lcmpzero
	jp	nz, BB17_16
	ld	bc, -157
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	push	iy
	call	__Znaj
	ld	bc, -154
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, (ix - 82)
	ld	e, (ix - 79)
	call	__lcmpzero
	jp	nz, BB17_51
	ld	hl, 1
	ld	bc, (ix - 124)
	call	__ishl
	ld	de, -133
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	hl, 2
	call	__ishl
	push	hl
	call	__Znaj
	pop	de
	ld	bc, -163
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	ix
	ld	bc, -136
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -145
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
BB17_24:
	ld	bc, -145
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	de
	call	_rgb888to565
	ld	de, -145
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	ld	(ix - 3), bc
	push	ix
	ld	bc, -136
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	pop	iy
	ld	(iy), l
	ld	(iy + 1), h
	ld	bc, (ix - 3)
	push	bc
	pop	iy
	lea	iy, iy + 4
	lea	bc, iy
	ld	(ix - 3), bc
	ld	bc, -133
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	dec	hl
	push	de
	pop	iy
	lea	iy, iy + 2
	push	ix
	ld	de, -136
	add	ix, de
	ld	(ix), iy
	pop	ix
	ld	bc, (ix - 3)
	push	bc
	pop	de
	ld	bc, -133
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB17_24
	jp	BB17_56
BB17_25:
	ld	hl, _.str.3
	jp	BB17_11
BB17_26:
	ld	de, -145
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	push	ix
	ld	bc, -157
	add	ix, bc
	ld	(ix), iy
	pop	ix
	push	iy
	call	__Znaj
	ld	bc, -154
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	bc, -136
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	e, (ix)
	pop	ix
	call	__lcmpzero
	jp	nz, BB17_30
BB17_27:
	ld	hl, 3
	ld	de, -145
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	de, -139
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -142
	add	ix, bc
	ld	e, (ix)
	pop	ix
	jp	BB17_61
BB17_28:
	ld	hl, 4
	push	ix
	ld	bc, -145
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -157
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	push	iy
	call	__Znaj
	ld	bc, -154
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	bc, -136
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	e, (ix)
	pop	ix
	call	__lcmpzero
	jp	nz, BB17_42
	ld	de, -139
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	(ix - 3), bc
	ld	bc, -142
	lea	iy, ix
	add	iy, bc
	ld	e, (iy)
	jp	BB17_61
BB17_30:
	ld	bc, 31744
	ld	iy, (ix - 74)
	ld	e, (ix - 71)
	ld	hl, (ix - 70)
	ld	(ix - 124), hl
	ld	d, (ix - 67)
	ld	hl, (ix - 66)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	a, (ix - 63)
	ld	bc, -136
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	lea	hl, iy
	push	ix
	ld	bc, -160
	add	ix, bc
	ld	(ix), e
	pop	ix
	xor	a, a
	ld	bc, (ix - 3)
	call	__lcmpu
	jr	nz, BB17_33
	ld	bc, 992
	ld	hl, (ix - 124)
	ld	e, d
	call	__lcmpu
	jr	nz, BB17_33
	ld	bc, -133
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -136
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, 31
	call	__lcmpu
	jp	z, BB17_27
BB17_33:
	ld	bc, -163
	lea	hl, ix
	add	hl, bc
	ld	(hl), d
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	push	ix
	ld	bc, -136
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, 31
	call	__lcmpu
	ld	d, 1
	ld	a, d
	jr	z, BB17_35
	ld	a, 0
BB17_35:
	ld	bc, -133
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	lea	hl, iy
	ld	bc, -160
	lea	iy, ix
	add	iy, bc
	ld	e, (iy)
	ld	bc, 63488
	xor	a, a
	call	__lcmpu
	ld	l, d
	jr	z, BB17_37
	ld	l, 0
BB17_37:
	ex	de, hl
	ld	iyl, e
	ex	de, hl
	ld	hl, (ix - 124)
	push	ix
	ld	bc, -163
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, 2016
	call	__lcmpu
	jr	z, BB17_39
	ld	d, 0
BB17_39:
	ld	a, iyl
	rrc	a
	sbc	a, a
	ld	l, a
	rrc	d
	sbc	a, a
	ld	e, a
	ld	a, l
	and	a, e
	ld	l, a
	ld	bc, -133
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	rrc	a
	sbc	a, a
	ld	e, a
	ld	a, l
	and	a, e
	bit	0, a
	ld	de, -139
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	bc, (hl)
	jr	nz, BB17_41
	ld	hl, 5
	ld	de, -145
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
BB17_41:
	jp	BB17_60
BB17_42:
	ld	bc, -65536
	ld	hl, (ix - 74)
	ld	e, (ix - 71)
	ld	iyh, b
	ld	a, iyh
	call	__lcmpu
	ld	d, 1
	ld	iyl, b
	ld	iyh, d
	jr	z, BB17_44
	ld	iyh, iyl
BB17_44:
	ld	hl, (ix - 70)
	ld	e, (ix - 67)
	ld	bc, 65280
	xor	a, a
	call	__lcmpu
	jr	z, BB17_46
	ld	d, iyl
BB17_46:
	ld	a, iyh
	rrc	a
	sbc	a, a
	ld	l, a
	rrc	d
	sbc	a, a
	ld	e, a
	ld	a, l
	and	a, e
	ld	d, a
	ld	hl, (ix - 66)
	ld	e, (ix - 63)
	ld	bc, 255
	xor	a, a
	call	__lcmpu
	jr	nz, BB17_48
	ld	iyl, -1
BB17_48:
	ld	hl, 4
	ld	(ix - 3), de
	push	ix
	ld	de, -139
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -142
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, (ix - 3)
	ld	a, d
	and	a, iyl
	bit	0, a
	jr	nz, BB17_50
	ld	hl, 5
BB17_50:
	ld	(ix - 3), bc
	ld	bc, -145
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	jp	BB17_61
BB17_51:
	push	hl
	pop	de
	push	hl
	pop	iy
	add	iy, de
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	(ix), hl
	pop	ix
	add	hl, de
	ld	de, -1
	jr	c, BB17_53
	lea	de, iy
BB17_53:
	push	de
	call	__Znaj
	push	hl
	pop	de
	pop	hl
	ld	(ix - 3), de
	ld	de, -133
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	ld	bc, -163
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	(iy), de
	ld	bc, (ix - 3)
	jp	z, BB17_56
	ld	(ix - 3), bc
	ld	bc, -136
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, -145
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	bc, (ix - 3)
BB17_55:
	ld	(ix - 3), de
	ld	de, -133
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, (ix - 3)
	ld	bc, -145
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	de
	call	_rgb888to565
	ld	de, -133
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	ld	(ix - 3), bc
	push	ix
	ld	bc, -136
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	pop	iy
	ld	(iy), l
	ld	(iy + 1), h
	ld	bc, -145
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	iy, iy + 4
	lea	hl, iy
	ld	bc, (ix - 3)
	dec	bc
	push	de
	pop	iy
	lea	iy, iy + 2
	push	ix
	ld	de, -136
	add	ix, de
	ld	(ix), iy
	pop	ix
	ex	de, hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB17_55
BB17_56:
	ld.sis	de, 8
	ld	hl, (ix - 124)
	or	a, a
	sbc.sis	hl, de
	ld	de, -139
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	bc, (hl)
	jr	z, BB17_58
	ld	hl, 0
	jr	BB17_59
BB17_58:
	ld	hl, 1
BB17_59:
	ld	de, -145
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
BB17_60:
	ld	(ix - 3), bc
	ld	bc, -142
	lea	hl, ix
	add	hl, bc
	ld	e, (hl)
BB17_61:
	ld	bc, (ix - 3)
	ld	hl, -6291456
	ld	iyh, 67
	ld	a, e
	call	__ltof
	push	bc
	pop	de
	ld	iyl, a
	push	hl
	pop	bc
	ld	a, iyh
	ld	(ix - 3), bc
	ld	bc, -139
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ex	de, hl
	push	ix
	ld	bc, -142
	add	ix, bc
	push	af
	ld	a, iyl
	ld	(ix), a
	pop	af
	pop	ix
	ld	e, iyl
	ld	bc, (ix - 3)
	call	__fdiv
	ld	(ix - 124), bc
	ld	(ix - 3), bc
	ld	bc, -133
	lea	iy, ix
	add	iy, bc
	ld	(iy), a
	ld	de, (ix - 106)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	bc, (ix - 3)
	push	hl
	pop	bc
	ld	(ix - 3), bc
	ld	bc, -136
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	ex	de, hl
	ld	bc, (ix - 3)
	add	hl, bc
	call	__ixor
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	iy
	ld	d, a
	ld	bc, 7340032
	ld	a, 67
	lea	hl, iy
	ld	e, d
	call	__fdiv
	ld	hl, (ix - 124)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, (ix - 3)
	call	__fcmp
	jp	p, BB17_63
	ld	bc, (ix - 124)
	ld	(ix - 3), bc
	ld	bc, -133
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	lea	hl, iy
	ld	e, d
	ld	bc, (ix - 3)
	call	__fmul
	call	__ftoul
	ld	hl, 240
	ld	(ix - 3), de
	ld	de, -142
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	or	a, a
	sbc	hl, bc
	ld	c, 1
	call	__ishru
	ld	bc, -320
	call	__imulu
	ld	de, (ix - 3)
	ld	de, 320
	ld	(ix - 3), bc
	push	ix
	ld	bc, -160
	jr	BB17_64
BB17_63:
	ld	de, -139
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 3), bc
	ld	bc, -142
	lea	iy, ix
	add	iy, bc
	ld	e, (iy)
	ld	bc, (ix - 3)
	call	__fmul
	call	__ftoul
	ld	hl, 320
	ld	(ix - 3), de
	push	ix
	ld	de, -160
	add	ix, de
	ld	(ix), bc
	pop	ix
	or	a, a
	sbc	hl, bc
	ld	c, 1
	call	__ishru
	ld	de, (ix - 3)
	ld	de, 240
	ld	(ix - 3), bc
	push	ix
	ld	bc, -142
BB17_64:
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	ld	c, 1
	call	__ishl
	push	hl
	pop	de
	ld	iy, -2730624
	add	iy, de
	xor	a, a
	ld	(-2883584), a
	ld	hl, -2883584
	push	hl
	pop	de
	inc	de
	ld	bc, 153599
	ldir
	ld	bc, -136
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB17_114
	ld	de, -2883584
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jp	c, BB17_114
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	bc, -148
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	e, l
	ld	d, h
	ld	bc, -172
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	or	a, a
	sbc	hl, hl
	push	ix
	ld	bc, -166
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	ix
	ld	bc, -139
	add	ix, bc
	ld	(ix), hl
	pop	ix
BB17_67:
	ld	bc, -148
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	de, (ix - 127)
	ld	iy, (ix - 121)
BB17_68:
	ld	bc, -154
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -157
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
BB17_69:
	ld	(ix - 124), hl
	add	iy, de
	add	hl, de
	ld	(ix - 127), hl
	ld	bc, -8388608
	add	hl, bc
	ld	bc, -8383487
	or	a, a
	sbc	hl, bc
	jp	c, BB17_75
	ld	hl, 5120
	or	a, a
	sbc	hl, de
	ld	(ix - 127), hl
	push	hl
	push	iy
	ld	bc, -133
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	de, (ix - 127)
	ld	bc, -133
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, de
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (ix - 124)
	or	a, a
	sbc	hl, de
	ld	(ix - 124), hl
	ld	hl, (ix - 117)
	push	hl
	call	_fat_GetFileSize
	pop	bc
	ld	bc, 511
	xor	a, a
	call	__ladd
	push	hl
	pop	bc
	ld	a, e
	ld	l, 9
	call	__lshru
	ld	(ix - 127), bc
	ld	(ix - 3), bc
	ld	bc, -169
	lea	iy, ix
	add	iy, bc
	ld	(iy), a
	ld	hl, (ix - 117)
	push	hl
	ld	bc, (ix - 3)
	call	_fat_GetFileBlockOffset
	push	hl
	pop	bc
	pop	hl
	xor	a, a
	ld	hl, (ix - 127)
	ld	(ix - 3), bc
	ld	bc, -169
	lea	iy, ix
	add	iy, bc
	ld	e, (iy)
	ld	bc, (ix - 3)
	call	__lsub
	push	hl
	pop	iy
	ld	d, e
	lea	bc, iy
	ld	a, d
	ld	l, 9
	call	__lshl
	ld	hl, 5120
	ld	e, l
	call	__lcmpu
	ccf
	sbc	a, a
	inc	a
	bit	0, a
	ld	hl, 10
	jr	nz, BB17_72
	lea	hl, iy
BB17_72:
	bit	0, a
	ld	a, 0
	jr	nz, BB17_74
	ld	a, d
BB17_74:
	ld	bc, -169
	lea	iy, ix
	add	iy, bc
	ld	(iy), a
	ld	de, (ix - 121)
	push	de
	push	hl
	ld	(ix - 127), hl
	ld	hl, (ix - 117)
	push	hl
	call	_fat_ReadFile
	ld	iy, (ix - 121)
	push	hl
	pop	bc
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 127)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -169
	add	ix, bc
	ld	e, (ix)
	pop	ix
	xor	a, a
	ld	bc, (ix - 3)
	call	__lcmpu
	ld	de, 0
	ld	hl, (ix - 124)
	jp	z, BB17_69
	jp	BB17_116
BB17_75:
	ld	hl, (ix - 124)
	push	hl
	push	iy
	ld	bc, -133
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_memcpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	ld	bc, -142
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, -139
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	push	ix
	ld	bc, -166
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	inc	hl
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -139
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	lea	hl, iy
	ld	de, -8388608
	add	hl, de
	ld	bc, -8388607
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 127)
	ld	iy, (ix - 121)
	jp	c, BB17_68
	jp	BB17_109
BB17_76:
	ld	hl, JTI17_1
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB17_77:
	ld	hl, (ix - 110)
	ld	iy, (ix - 100)
	ld	a, 8
	sub	a, iyl
	push	ix
	ld	de, -185
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, -8388608
	add	hl, de
	push	ix
	ld	de, -188
	add	ix, de
	ld	(ix), hl
	pop	ix
	or	a, a
	sbc	hl, bc
	jp	c, BB17_110
	ld	de, -151
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	push	ix
	ld	de, -178
	add	ix, de
	ld	(ix), iy
	pop	ix
	ld	c, iyl
	scf
	sbc	hl, hl
	ld	de, -151
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	call	__ishl
	push	hl
	pop	de
	scf
	sbc	hl, hl
	or	a, a
	sbc	hl, de
	ld	bc, 255
	call	__iand
	push	ix
	ld	de, -191
	add	ix, de
	ld	(ix), hl
	pop	ix
	push	ix
	ld	de, -154
	add	ix, de
	ld	hl, (ix)
	pop	ix
	push	ix
	ld	de, -133
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	iy, 0
	lea	hl, iy
	ld	(ix - 124), iy
	push	ix
	ld	de, -169
	add	ix, de
	ld	(ix), a
	pop	ix
	push	ix
	ld	de, -148
	add	ix, de
	ld	hl, (ix)
	pop	ix
	push	ix
	ld	de, -175
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, -179
	lea	hl, ix
	add	hl, de
	ld	(hl), a
BB17_79:
	ld	de, -182
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	hl, (ix - 124)
	ld	bc, -8388608
	add	hl, bc
	ld	de, -8388607
	or	a, a
	sbc	hl, de
	jp	c, BB17_82
	or	a, a
	sbc	hl, hl
	ld	de, -133
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	ld	l, (iy)
	ld	de, -169
	lea	iy, ix
	add	iy, de
	ld	c, (iy)
	call	__ishru
	push	ix
	ld	de, -191
	add	ix, de
	ld	bc, (ix)
	pop	ix
	call	__iand
	ld	c, 1
	call	__ishl
	push	hl
	pop	bc
	push	ix
	ld	de, -163
	add	ix, de
	ld	hl, (ix)
	pop	ix
	add	hl, bc
	ex	de, hl
BB17_81:
	push	de
	pop	hl
	ld	hl, (hl)
	ld	bc, -175
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy), l
	ld	(iy + 1), h
	lea	iy, iy + 2
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	hl, (ix - 124)
	ld	(ix - 3), de
	ld	de, -185
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	ld	(ix - 124), hl
	ld	bc, -8388608
	add	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jr	nc, BB17_81
	jr	BB17_83
BB17_82:
	ld	iy, 0
	ld	(ix - 124), iy
BB17_83:
	ld	bc, -182
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB17_84:
	ld	de, -169
	lea	hl, ix
	add	hl, de
	ld	c, (hl)
	ld	a, c
	ld	(ix - 3), bc
	push	ix
	ld	bc, -178
	add	ix, bc
	ld	de, (ix)
	pop	ix
	cp	a, e
	sbc	a, a
	ld	l, a
	ld	bc, (ix - 3)
	ld	a, c
	sub	a, e
	bit	0, l
	ld	(ix - 3), bc
	push	ix
	ld	bc, -179
	push	af
	add	ix, bc
	pop	af
	ld	e, (ix)
	pop	ix
	ld	bc, (ix - 3)
	jr	nz, BB17_86
	ld	e, a
BB17_86:
	push	ix
	ld	bc, -169
	add	ix, bc
	ld	(ix), e
	pop	ix
	ld	a, l
	and	a, 1
	ld	bc, 0
	ld	c, a
	ld	de, -133
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	add	hl, bc
	push	ix
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, -160
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	hl, (ix - 124)
	add	hl, bc
	inc	iy
	ld	(ix - 124), hl
	ld	bc, -8388608
	add	hl, bc
	ld	de, -8388607
	or	a, a
	sbc	hl, de
	jp	c, BB17_84
	lea	hl, iy
	add	hl, bc
	push	ix
	ld	de, -188
	add	ix, de
	ld	bc, (ix)
	pop	ix
	or	a, a
	sbc	hl, bc
	jp	nc, BB17_110
	jp	BB17_79
BB17_88:
	ld	bc, (ix - 110)
	ld	hl, 320
	ld	e, 0
	ld	a, (ix - 107)
	call	__lcmps
	call	pe, __setflag
	jp	p, BB17_108
	ld	bc, -148
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	de, iy
	push	ix
	ld	bc, -154
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	ld	bc, 640
	ldir
	jp	BB17_111
BB17_90:
	ld	hl, (ix - 110)
	ld	de, -169
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, 0
	ld	(ix - 124), hl
	ld	de, -160
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	iy, (hl)
	push	ix
	ld	de, -154
	push	af
	add	ix, de
	pop	af
	ld	hl, (ix)
	pop	ix
	push	ix
	ld	de, -133
	push	af
	add	ix, de
	pop	af
	ld	(ix), hl
	pop	ix
	ld	de, -148
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	hl, (hl)
	push	ix
	ld	de, -175
	push	af
	add	ix, de
	pop	af
	ld	(ix), hl
	pop	ix
	jp	z, BB17_110
BB17_91:
	lea	hl, iy
	ld	de, -8388608
	add	hl, de
	or	a, a
	sbc	hl, bc
	jr	c, BB17_93
BB17_92:
	ld	bc, -178
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	bc, -133
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	call	_rgb1555to565
	ld	bc, -8388607
	pop	de
	ld	de, -175
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	ld	(iy), l
	ld	(iy + 1), h
	lea	iy, iy + 2
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	de, -178
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -169
	add	ix, bc
	ld	de, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	push	hl
	pop	iy
	ld	de, -8388608
	add	hl, de
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	jr	nc, BB17_92
BB17_93:
	lea	hl, iy
	ld	de, -133
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	lea	iy, iy + 2
	push	ix
	add	ix, de
	ld	(ix), iy
	pop	ix
	push	hl
	pop	iy
	ld	(ix - 3), bc
	ld	bc, -160
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	add	iy, de
	ld	hl, (ix - 124)
	inc	hl
	ld	(ix - 124), hl
	lea	hl, iy
	ld	de, -8388608
	add	hl, de
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	jr	c, BB17_93
	ld	hl, (ix - 124)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -169
	add	ix, bc
	ld	de, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 3)
	jp	nc, BB17_110
	jp	BB17_91
BB17_95:
	ld	hl, (ix - 110)
	ld	de, -169
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	iy, 0
	push	ix
	ld	de, -160
	push	af
	add	ix, de
	pop	af
	ld	hl, (ix)
	pop	ix
	ld	(ix - 124), hl
	ld	de, -154
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	hl, (hl)
	push	ix
	ld	de, -133
	push	af
	add	ix, de
	pop	af
	ld	(ix), hl
	pop	ix
	ld	de, -148
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	hl, (hl)
	push	ix
	ld	de, -175
	push	af
	add	ix, de
	pop	af
	ld	(ix), hl
	pop	ix
	jp	z, BB17_110
BB17_96:
	ld	de, -178
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	iy, (ix - 124)
	lea	hl, iy
	ld	de, -8388608
	add	hl, de
	or	a, a
	sbc	hl, bc
	jr	c, BB17_98
BB17_97:
	ld	(ix - 124), iy
	ld	bc, -133
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_rgb888to565
	ld	bc, -8388607
	pop	de
	ld	de, -175
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	ld	(iy), l
	ld	(iy + 1), h
	lea	iy, iy + 2
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	hl, (ix - 124)
	ld	(ix - 3), bc
	ld	bc, -169
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	or	a, a
	sbc	hl, de
	push	hl
	pop	iy
	ld	de, -8388608
	add	hl, de
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	jr	nc, BB17_97
BB17_98:
	ld	(ix - 124), iy
	ld	de, -178
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
BB17_99:
	ld	(ix - 3), bc
	ld	bc, -172
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	add	hl, de
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -160
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	hl, (ix - 124)
	add	hl, de
	inc	iy
	ld	(ix - 124), hl
	ld	de, -8388608
	add	hl, de
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	jr	c, BB17_99
	lea	hl, iy
	ld	(ix - 3), bc
	push	ix
	ld	bc, -169
	add	ix, bc
	ld	de, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 3)
	jp	nc, BB17_110
	jp	BB17_96
BB17_101:
	ld	hl, (ix - 110)
	ld	de, -169
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	ld	(ix - 3), bc
	push	ix
	ld	bc, -133
	push	af
	add	ix, bc
	pop	af
	ld	(ix), de
	pop	ix
	push	ix
	ld	de, -160
	push	af
	add	ix, de
	pop	af
	ld	hl, (ix)
	pop	ix
	ld	(ix - 124), hl
	ld	de, -148
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	hl, (hl)
	push	ix
	ld	de, -175
	push	af
	add	ix, de
	pop	af
	ld	(ix), hl
	pop	ix
	ld	bc, (ix - 3)
	jp	z, BB17_110
BB17_102:
	ld	hl, (ix - 124)
	ld	de, -8388608
	add	hl, de
	or	a, a
	sbc	hl, bc
	jr	c, BB17_104
BB17_103:
	ld	bc, -154
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -133
	add	ix, bc
	ld	de, (ix)
	pop	ix
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	c, 1
	call	__ishl
	push	hl
	pop	bc
	ld	de, -163
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	ld	bc, (hl)
	ld	(ix - 3), bc
	ld	bc, -175
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	push	de
	pop	iy
	ld	bc, (ix - 3)
	ld	(iy), c
	ld	(iy + 1), b
	lea	iy, iy + 2
	push	ix
	ld	bc, -175
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	hl, (ix - 124)
	ld	bc, -169
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	or	a, a
	sbc	hl, de
	ld	(ix - 124), hl
	ld	bc, -8388608
	add	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB17_103
BB17_104:
	ld	bc, -133
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB17_105:
	ld	de, -160
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	hl, (ix - 124)
	add	hl, bc
	ld	bc, -8388607
	inc	iy
	ld	(ix - 124), hl
	ld	de, -8388608
	add	hl, de
	or	a, a
	sbc	hl, bc
	jr	c, BB17_105
	ld	de, -133
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	lea	hl, iy
	ld	(ix - 3), bc
	ld	bc, -169
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 3)
	jp	nc, BB17_110
	jp	BB17_102
BB17_107:
	ld	hl, (ix - 110)
	ld	bc, -130
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	ix
	ld	bc, -148
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	push	ix
	ld	bc, -172
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	push	ix
	ld	bc, -160
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	push	hl
	ld	bc, -154
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	__Z18displayBitFieldRowPhijjPtP16bitmapInfoHeader
	ld	hl, 18
	add	hl, sp
	ld	sp, hl
	ld	bc, -148
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	hl, (ix - 106)
	push	ix
	ld	bc, -136
	add	ix, bc
	ld	(ix), hl
	pop	ix
	jr	BB17_111
BB17_108:
	push	bc
	pop	hl
	ld	c, 1
	call	__ishl
	push	hl
	ld	de, -154
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	de, -148
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	call	_memcpy
	ld	hl, 9
	add	hl, sp
	ld	sp, hl
	jr	BB17_110
BB17_109:
	ld	(ix - 3), bc
	ld	bc, -145
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	a, e
	cp	a, 6
	ld	bc, (ix - 3)
	jp	c, BB17_76
BB17_110:
	ld	bc, -148
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB17_111:
	ld	de, -640
	add	iy, de
	ld	bc, -148
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	bc, -136
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -139
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	or	a, a
	sbc	hl, de
	push	ix
	ld	de, -139
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	bc, (ix - 3)
	ld	bc, -8388608
	add	hl, bc
	inc	bc
	or	a, a
	sbc	hl, bc
	jr	nc, BB17_109
	ld	bc, -136
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -166
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	or	a, a
	sbc	hl, de
	ld	bc, -148
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	ld	de, -2883584
	ld	bc, (ix - 3)
	jr	nc, BB17_114
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jp	nc, BB17_67
BB17_114:
	ld	bc, -163
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, __ZdaPv
	pop	hl
	ld	a, 1
	ld	(ix - 118), a
BB17_115:
	ld	bc, -154
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	__ZdaPv
	jp	BB17_12
BB17_116:
	ld	hl, _.str.1
	push	hl
	call	_os_PutStrFull
	pop	hl
	ld	bc, -163
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	hl
	call	nz, __ZdaPv
	pop	hl
	jr	BB17_115
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI17_0
JTI17_0:
	dl	BB17_21
	dl	BB17_21
	dl	BB17_16
	dl	BB17_21
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_21
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_26
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_28
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_16
	dl	BB17_28
	private	JTI17_1
JTI17_1:
	dl	BB17_77
	dl	BB17_101
	dl	BB17_88
	dl	BB17_90
	dl	BB17_95
	dl	BB17_107

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	iy, -3145600
	call	_os_ClrLCDFull
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, _.str.6
	push	hl
	call	_os_PutStrFull
	pop	hl
	call	_init_USB
	bit	0, a
	jr	z, BB18_8
	ld	hl, _.str.2.8
	ld	de, _.str.3.9
	push	de
	push	hl
	call	__Z13displayBitmapPKcS0_
	ld	hl, 6
	add	hl, sp
	ld	sp, hl
	bit	0, a
	jr	z, BB18_11
	call	_usb_WaitForEvents
	ld	a, (_global+1796)
	bit	0, a
	jr	nz, BB18_12
BB18_3:
	ld	a, (_global+1795)
	bit	0, a
	jr	z, BB18_5
BB18_4:
	ld	hl, _global+3
	push	hl
	call	_msd_Close
	pop	hl
BB18_5:
	call	_usb_Cleanup
BB18_6:
	call	_os_GetCSC
	or	a, a
	jr	z, BB18_6
	or	a, a
	sbc	hl, hl
	ret
BB18_8:
	ld	hl, _.str.1.7
	push	hl
	call	_os_PutStrFull
	pop	hl
BB18_9:
	call	_os_GetCSC
	or	a, a
	jr	z, BB18_9
	ld	hl, 1
	ret
BB18_11:
	ld	hl, _.str.4.10
	push	hl
	call	_os_PutStrFull
	pop	hl
	call	_usb_WaitForEvents
	ld	a, (_global+1796)
	bit	0, a
	jr	z, BB18_3
BB18_12:
	ld	hl, _global+1027
	push	hl
	call	_fat_Close
	pop	hl
	ld	a, (_global+1795)
	bit	0, a
	jr	nz, BB18_4
	jr	BB18_5
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	private	_global
_global:
	rb	1797

	section	.bss,"aw",@nobits
	private	_partitions
_partitions:
	rb	256

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	" !Read failed.!", 0

	section	.rodata,"a",@progbits
	private	_.str.1.2
_.str.1.2:
	db	" !Magic bytes are wrong!", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	" !DIB header too small!", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	" !Compression mode wrong!", 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	" !Compression mode or header type wrong!", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	" !Unsupported bit depth!", 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"Attempting to read bitmap, please wait... Press any key to cancel.", 0

	section	.rodata,"a",@progbits
	private	_.str.1.7
_.str.1.7:
	db	" Failed to open USB. Press any key to continue.", 0

	section	.rodata,"a",@progbits
	private	_.str.2.8
_.str.2.8:
	db	"/", 0

	section	.rodata,"a",@progbits
	private	_.str.3.9
_.str.3.9:
	db	"test.bmp", 0

	section	.rodata,"a",@progbits
	private	_.str.4.10
_.str.4.10:
	db	" Press any key to exit.", 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 005a99ce2569373524bd881207aa4a1e98a2b238)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 005a99ce2569373524bd881207aa4a1e98a2b238)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 005a99ce2569373524bd881207aa4a1e98a2b238)"
	extern	__ldivs
	extern	__ZdaPv
	extern	__Unwind_SjLj_Register
	extern	_rgb1555to565
	extern	_toupper
	extern	_usb_WaitForInterrupt
	extern	_fat_GetFileSize
	extern	_usb_ResetDevice
	extern	_fat_Close
	extern	__lcmpzero
	extern	__sshl
	extern	_msd_Read
	extern	_strncpy
	extern	_localtime
	extern	_strncat
	extern	_rgb888to565
	extern	_os_DrawStatusBar
	extern	__ftoul
	extern	_memcpy
	extern	__ishl
	extern	__ladd
	extern	_msd_Open
	extern	__sshru
	extern	_strlen
	extern	__setflag
	extern	_msd_FindPartitions
	extern	__Znaj
	extern	_fat_ReadFile
	extern	__iand
	extern	__ixor
	extern	_fat_WriteFile
	extern	_os_PutStrFull
	extern	__ltof
	extern	_fat_Open
	extern	_fat_Delete
	extern	_os_GetCSC
	extern	_usb_WaitForEvents
	extern	_free
	extern	__lshru
	extern	_time
	extern	_usb_Cleanup
	extern	_os_HomeUp
	extern	_msd_Close
	extern	_fat_Create
	extern	_fat_SetFileSize
	extern	_fat_CloseFile
	extern	__lsub
	extern	__indcallhl
	extern	__lmulu
	extern	__ishru
	extern	__fmul
	extern	__Unwind_SjLj_Unregister
	extern	__lshl
	extern	__fdiv
	extern	__imulu
	extern	__land
	extern	_fat_OpenFile
	extern	_calloc
	extern	_msd_Info
	extern	__lcmps
	extern	__lcmpu
	extern	__fcmp
	extern	_os_ClrLCDFull
	extern	_fat_GetFileBlockOffset
	extern	_msd_Write
	extern	_usb_Init
